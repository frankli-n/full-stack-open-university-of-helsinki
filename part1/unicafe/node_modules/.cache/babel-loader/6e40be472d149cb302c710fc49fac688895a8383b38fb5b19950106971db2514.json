{"ast":null,"code":"var _jsxFileName = \"/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = StatisticLine;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const handleGood = newValue => {\n    setGood(newValue);\n    setAverage((newValue - bad) / (newValue + bad + neutral));\n    setPositive(newValue / (newValue + bad + neutral));\n  };\n  const handleNeutral = newValue => {\n    setNeutral(newValue);\n    setAverage((good - bad) / (good + bad + newValue));\n    setPositive(good / (good + bad + newValue));\n  };\n  const handleBad = newValue => {\n    setBad(newValue);\n    setAverage((good - newValue) / (good + newValue + neutral));\n    setPositive(good / (good + newValue + neutral));\n  };\n  const formattedValue = (positive * 100).toFixed(1);\n  const percentage = `${formattedValue}%`;\n  const anecdotes = ['If it hurts, do it more often.', 'Adding manpower to a late software project makes it later!', 'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.', 'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.', 'Premature optimization is the root of all evil.', 'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.', 'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.', 'The only way to go fast, is to go well.'];\n  const [selected, setSelected] = useState(0);\n  const handleAnecdote = () => {\n    const rando = Math.floor(Math.random() * 8);\n    setSelected(rando);\n    console.log(selected);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: () => handleGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: () => handleNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: () => handleBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), good + bad + neutral === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"good\",\n            value: good\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"neutral\",\n            value: neutral\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"bad\",\n            value: bad\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"average\",\n            value: average\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(StatisticLine, {\n            text: \"positive\",\n            value: percentage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: \"next anecdonte\",\n        handleClick: () => handleAnecdote()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 7\n      }, this), anecdotes[selected]]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lwc6rj9jJ8R63/Sf14ct4lE5MAM=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Button\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","StatisticLine","_ref","text","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Button","props","onClick","handleClick","_c2","App","_s","good","setGood","neutral","setNeutral","bad","setBad","average","setAverage","positive","setPositive","handleGood","newValue","handleNeutral","handleBad","formattedValue","toFixed","percentage","anecdotes","selected","setSelected","handleAnecdote","rando","Math","floor","random","console","log","_c3","$RefreshReg$"],"sources":["/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst StatisticLine = ({text,value}) => {\n  \n  return (\n    <>\n      <td>{text}</td>\n      <td>{value}</td>\n    </>\n  )}\n\nconst Button = (props) => {\n\n  return (\n    <>\n      <button onClick={props.handleClick}>{props.text}</button>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const handleGood = (newValue) => {\n    setGood(newValue)\n    setAverage((newValue-bad)/(newValue+bad+neutral))\n    setPositive(newValue/(newValue+bad+neutral))\n  }\n  const handleNeutral = (newValue) => {\n    setNeutral(newValue)\n    setAverage((good-bad)/(good+bad+newValue))\n    setPositive(good/(good+bad+newValue))\n  }\n  const handleBad = (newValue) => {\n    setBad(newValue)\n    setAverage((good-newValue)/(good+newValue+neutral))\n    setPositive(good/(good+newValue+neutral))\n  }\n  const formattedValue = (positive * 100).toFixed(1);\n  const percentage = `${formattedValue}%`;\n  \n  const anecdotes = [\n    'If it hurts, do it more often.',\n    'Adding manpower to a late software project makes it later!',\n    'The first 90 percent of the code accounts for the first 10 percent of the development time...The remaining 10 percent of the code accounts for the other 90 percent of the development time.',\n    'Any fool can write code that a computer can understand. Good programmers write code that humans can understand.',\n    'Premature optimization is the root of all evil.',\n    'Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it.',\n    'Programming without an extremely heavy use of console.log is same as if a doctor would refuse to use x-rays or blood tests when diagnosing patients.',\n    'The only way to go fast, is to go well.'\n  ]\n   \n  const [selected, setSelected] = useState(0)\n\n  const handleAnecdote = () => {\n    const rando = Math.floor(Math.random() * 8)\n    setSelected(rando)\n    console.log(selected)\n  }\n\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text='good' handleClick={() => handleGood(good + 1)}/>\n      <Button text='neutral' handleClick={() => handleNeutral(neutral + 1)}/>\n      <Button text='bad' handleClick={() => handleBad(bad + 1)}/>\n      <h1>statistics</h1>\n      {good + bad + neutral === 0 ? (\n      <div>No feedback given</div>\n      ) : (\n      <table>\n        <tbody>\n          <tr>\n            <StatisticLine text=\"good\" value ={good} />\n          </tr>\n          <tr>\n            <StatisticLine text=\"neutral\" value ={neutral} />\n          </tr>\n          <tr>\n            <StatisticLine text=\"bad\" value ={bad} />\n          </tr>\n          <tr>\n            <StatisticLine text=\"average\" value={average} />\n          </tr>\n          <tr>\n            <StatisticLine text=\"positive\" value={percentage} />\n          </tr>\n        </tbody>\n      </table>\n      )}\n      <div>\n      <Button text='next anecdonte' handleClick={() => handleAnecdote()}/>\n        {anecdotes[selected]}\n      </div>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,aAAa,GAAGC,IAAA,IAAkB;EAAA,IAAjB;IAACC,IAAI;IAACC;EAAK,CAAC,GAAAF,IAAA;EAEjC,oBACEJ,OAAA,CAAAE,SAAA;IAAAK,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAKF;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACfX,OAAA;MAAAO,QAAA,EAAKD;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA,eAChB,CAAC;AACJ,CAAC;AAAAC,EAAA,GAPET,aAAa;AASnB,MAAMU,MAAM,GAAIC,KAAK,IAAK;EAExB,oBACEd,OAAA,CAAAE,SAAA;IAAAK,QAAA,eACEP,OAAA;MAAQe,OAAO,EAAED,KAAK,CAACE,WAAY;MAAAT,QAAA,EAAEO,KAAK,CAACT;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBACzD,CAAC;AAEP,CAAC;AAAAM,GAAA,GAPKJ,MAAM;AASZ,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC0B,GAAG,EAAEC,MAAM,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EACjC,MAAM,CAAC4B,OAAO,EAAEC,UAAU,CAAC,GAAG7B,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAMgC,UAAU,GAAIC,QAAQ,IAAK;IAC/BV,OAAO,CAACU,QAAQ,CAAC;IACjBJ,UAAU,CAAC,CAACI,QAAQ,GAACP,GAAG,KAAGO,QAAQ,GAACP,GAAG,GAACF,OAAO,CAAC,CAAC;IACjDO,WAAW,CAACE,QAAQ,IAAEA,QAAQ,GAACP,GAAG,GAACF,OAAO,CAAC,CAAC;EAC9C,CAAC;EACD,MAAMU,aAAa,GAAID,QAAQ,IAAK;IAClCR,UAAU,CAACQ,QAAQ,CAAC;IACpBJ,UAAU,CAAC,CAACP,IAAI,GAACI,GAAG,KAAGJ,IAAI,GAACI,GAAG,GAACO,QAAQ,CAAC,CAAC;IAC1CF,WAAW,CAACT,IAAI,IAAEA,IAAI,GAACI,GAAG,GAACO,QAAQ,CAAC,CAAC;EACvC,CAAC;EACD,MAAME,SAAS,GAAIF,QAAQ,IAAK;IAC9BN,MAAM,CAACM,QAAQ,CAAC;IAChBJ,UAAU,CAAC,CAACP,IAAI,GAACW,QAAQ,KAAGX,IAAI,GAACW,QAAQ,GAACT,OAAO,CAAC,CAAC;IACnDO,WAAW,CAACT,IAAI,IAAEA,IAAI,GAACW,QAAQ,GAACT,OAAO,CAAC,CAAC;EAC3C,CAAC;EACD,MAAMY,cAAc,GAAG,CAACN,QAAQ,GAAG,GAAG,EAAEO,OAAO,CAAC,CAAC,CAAC;EAClD,MAAMC,UAAU,GAAI,GAAEF,cAAe,GAAE;EAEvC,MAAMG,SAAS,GAAG,CAChB,gCAAgC,EAChC,4DAA4D,EAC5D,8LAA8L,EAC9L,iHAAiH,EACjH,iDAAiD,EACjD,oLAAoL,EACpL,sJAAsJ,EACtJ,yCAAyC,CAC1C;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzC,QAAQ,CAAC,CAAC,CAAC;EAE3C,MAAM0C,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC;IAC3CL,WAAW,CAACE,KAAK,CAAC;IAClBI,OAAO,CAACC,GAAG,CAACR,QAAQ,CAAC;EACvB,CAAC;EAGD,oBACEtC,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBX,OAAA,CAACa,MAAM;MAACR,IAAI,EAAC,MAAM;MAACW,WAAW,EAAEA,CAAA,KAAMc,UAAU,CAACV,IAAI,GAAG,CAAC;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DX,OAAA,CAACa,MAAM;MAACR,IAAI,EAAC,SAAS;MAACW,WAAW,EAAEA,CAAA,KAAMgB,aAAa,CAACV,OAAO,GAAG,CAAC;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACvEX,OAAA,CAACa,MAAM;MAACR,IAAI,EAAC,KAAK;MAACW,WAAW,EAAEA,CAAA,KAAMiB,SAAS,CAACT,GAAG,GAAG,CAAC;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3DX,OAAA;MAAAO,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBS,IAAI,GAAGI,GAAG,GAAGF,OAAO,KAAK,CAAC,gBAC3BtB,OAAA;MAAAO,QAAA,EAAK;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE5BX,OAAA;MAAAO,QAAA,eACEP,OAAA;QAAAO,QAAA,gBACEP,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACG,aAAa;YAACE,IAAI,EAAC,MAAM;YAACC,KAAK,EAAGc;UAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzC,CAAC,eACLX,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACG,aAAa;YAACE,IAAI,EAAC,SAAS;YAACC,KAAK,EAAGgB;UAAQ;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CAAC,eACLX,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACG,aAAa;YAACE,IAAI,EAAC,KAAK;YAACC,KAAK,EAAGkB;UAAI;YAAAhB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACvC,CAAC,eACLX,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACG,aAAa;YAACE,IAAI,EAAC,SAAS;YAACC,KAAK,EAAEoB;UAAQ;YAAAlB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC9C,CAAC,eACLX,OAAA;UAAAO,QAAA,eACEP,OAAA,CAACG,aAAa;YAACE,IAAI,EAAC,UAAU;YAACC,KAAK,EAAE8B;UAAW;YAAA5B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN,eACDX,OAAA;MAAAO,QAAA,gBACAP,OAAA,CAACa,MAAM;QAACR,IAAI,EAAC,gBAAgB;QAACW,WAAW,EAAEA,CAAA,KAAMwB,cAAc,CAAC;MAAE;QAAAhC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,EACjE0B,SAAS,CAACC,QAAQ,CAAC;IAAA;MAAA9B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAAQ,EAAA,CAlFKD,GAAG;AAAA6B,GAAA,GAAH7B,GAAG;AAoFT,eAAeA,GAAG;AAAA,IAAAN,EAAA,EAAAK,GAAA,EAAA8B,GAAA;AAAAC,YAAA,CAAApC,EAAA;AAAAoC,YAAA,CAAA/B,GAAA;AAAA+B,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}