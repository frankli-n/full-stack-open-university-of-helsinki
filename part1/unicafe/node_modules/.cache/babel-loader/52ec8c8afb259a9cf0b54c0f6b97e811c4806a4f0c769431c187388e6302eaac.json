{"ast":null,"code":"var _jsxFileName = \"/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feedback = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Feedback;\nconst Statistics = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c2 = Statistics;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGood = newValue => {\n    setGood(newValue);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Feedback, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: () => handleGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: () => handleGood(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: () => handleGood(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), \"Statistics\", good]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Feedback\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Feedback","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Statistics","_c2","Button","onClick","handleClick","text","_c3","App","_s","good","setGood","neutral","setNeutral","bad","setBad","handleGood","newValue","_c4","$RefreshReg$"],"sources":["/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Feedback = (props) => {\n\n  return (\n    <>\n      <h1> give feedback</h1>\n    </>\n  )\n}\n\nconst Statistics = (props) => {\n\n  return (\n    <>\n      <h1>Statistics</h1>\n    </>\n  )\n}\n\nconst Button = (props) => {\n\n  return (\n    <>\n      <button onClick={props.handleClick}>{props.text}</button>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGood = (newValue) => {\n    setGood(newValue)\n  }\n\n  return (\n    <div>\n      <Feedback />\n      <Button text='good' handleClick={() => handleGood(good + 1)}/>\n      <Button text='neutral' handleClick={() => handleGood(neutral + 1)}/>\n      <Button text='bad' handleClick={() => handleGood(bad + 1)}/>\n      Statistics\n      {good}\n    </div>\n  )\n}\n\nexport default App"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAE1B,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA;MAAAK,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACvB,CAAC;AAEP,CAAC;AAAAC,EAAA,GAPKP,QAAQ;AASd,MAAMQ,UAAU,GAAIP,KAAK,IAAK;EAE5B,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA;MAAAK,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC,gBACnB,CAAC;AAEP,CAAC;AAAAG,GAAA,GAPKD,UAAU;AAShB,MAAME,MAAM,GAAIT,KAAK,IAAK;EAExB,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,eACEL,OAAA;MAAQc,OAAO,EAAEV,KAAK,CAACW,WAAY;MAAAV,QAAA,EAAED,KAAK,CAACY;IAAI;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC,gBACzD,CAAC;AAEP,CAAC;AAAAQ,GAAA,GAPKJ,MAAM;AASZ,MAAMK,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGvB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACwB,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAAC0B,GAAG,EAAEC,MAAM,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAEjC,MAAM4B,UAAU,GAAIC,QAAQ,IAAK;IAC/BN,OAAO,CAACM,QAAQ,CAAC;EACnB,CAAC;EAED,oBACE3B,OAAA;IAAAK,QAAA,gBACEL,OAAA,CAACG,QAAQ;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACZT,OAAA,CAACa,MAAM;MAACG,IAAI,EAAC,MAAM;MAACD,WAAW,EAAEA,CAAA,KAAMW,UAAU,CAACN,IAAI,GAAG,CAAC;IAAE;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC9DT,OAAA,CAACa,MAAM;MAACG,IAAI,EAAC,SAAS;MAACD,WAAW,EAAEA,CAAA,KAAMW,UAAU,CAACJ,OAAO,GAAG,CAAC;IAAE;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpET,OAAA,CAACa,MAAM;MAACG,IAAI,EAAC,KAAK;MAACD,WAAW,EAAEA,CAAA,KAAMW,UAAU,CAACF,GAAG,GAAG,CAAC;IAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,cAE5D,EAACW,IAAI;EAAA;IAAAd,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAAAU,EAAA,CApBKD,GAAG;AAAAU,GAAA,GAAHV,GAAG;AAsBT,eAAeA,GAAG;AAAA,IAAAR,EAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAW,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAjB,GAAA;AAAAiB,YAAA,CAAAZ,GAAA;AAAAY,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}