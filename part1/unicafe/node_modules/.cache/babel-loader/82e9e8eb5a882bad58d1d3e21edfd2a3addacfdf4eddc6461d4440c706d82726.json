{"ast":null,"code":"var _jsxFileName = \"/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Feedback = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Feedback;\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c2 = StatisticLine;\nconst Button = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: props.handleClick,\n      children: props.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = Button;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [average, setAverage] = useState(0);\n  const [positive, setPositive] = useState(0);\n  const handleGood = newValue => {\n    setGood(newValue);\n    setAverage((newValue - bad) / (newValue + bad + neutral));\n    setPositive(newValue / (newValue + bad + neutral));\n  };\n  const handleNeutral = newValue => {\n    setNeutral(newValue);\n    setAverage((good - bad) / (good + bad + newValue));\n    setPositive(good / (good + bad + newValue));\n  };\n  const handleBad = newValue => {\n    setBad(newValue);\n    setAverage((good - newValue) / (good + newValue + neutral));\n    setPositive(good / (good + newValue + neutral));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"good\",\n      handleClick: () => handleGood(good + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"neutral\",\n      handleClick: () => handleNeutral(neutral + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      text: \"bad\",\n      handleClick: () => handleBad(bad + 1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), good + bad + neutral === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"No feedback given\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"neutral\",\n        value: neutral\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"bad\",\n        value: bad\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"average\",\n        value: average\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"positive\",\n        value: positive\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"pIjOyC7koCrfQkVj9d+yvSEuo3E=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Feedback\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Feedback","props","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref","text","value","_c2","Button","onClick","handleClick","_c3","App","_s","good","setGood","neutral","setNeutral","bad","setBad","average","setAverage","positive","setPositive","handleGood","newValue","handleNeutral","handleBad","_c4","$RefreshReg$"],"sources":["/Volumes/SANDISK SSD/full-stack-open-university-helsinki/part1/state/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Feedback = (props) => {\n\n  return (\n    <>\n      <h1> give feedback</h1>\n    </>\n  )\n}\n\nconst StatisticLine = ({text,value}) => {\n  \n  return (\n    <>\n      <td>{text}</td>\n      <td>{value}</td>\n    </>\n  )}\n\nconst Button = (props) => {\n\n  return (\n    <>\n      <button onClick={props.handleClick}>{props.text}</button>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [average, setAverage] = useState(0)\n  const [positive, setPositive] = useState(0)\n\n  const handleGood = (newValue) => {\n    setGood(newValue)\n    setAverage((newValue-bad)/(newValue+bad+neutral))\n    setPositive(newValue/(newValue+bad+neutral))\n  }\n  const handleNeutral = (newValue) => {\n    setNeutral(newValue)\n    setAverage((good-bad)/(good+bad+newValue))\n    setPositive(good/(good+bad+newValue))\n  }\n  const handleBad = (newValue) => {\n    setBad(newValue)\n    setAverage((good-newValue)/(good+newValue+neutral))\n    setPositive(good/(good+newValue+neutral))\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button text='good' handleClick={() => handleGood(good + 1)}/>\n      <Button text='neutral' handleClick={() => handleNeutral(neutral + 1)}/>\n      <Button text='bad' handleClick={() => handleBad(bad + 1)}/>\n      <h1>statistics</h1>\n      {good + bad + neutral === 0 ? (\n      <div>No feedback given</div>\n      ) : (\n      <table>\n      <StatisticLine text=\"good\" value ={good} />\n      <StatisticLine text=\"neutral\" value ={neutral} />\n      <StatisticLine text=\"bad\" value ={bad} />\n      <StatisticLine text=\"average\" value={average} />\n      <StatisticLine text=\"positive\" value={positive} />\n      </table>\n      )}\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}